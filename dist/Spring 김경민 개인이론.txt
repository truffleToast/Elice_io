1. HTML문서의 장점은 마크업 랭귀지로써 웹문서와 웹문서를 연결하는데 도움을 주고 클라이언트와 서버간의 통신에 사용될 수 있다.

2. CSS가 필요한 이유는 HTML로만 이루어진 페이지보다 더 사용자의 눈에 좋게 보이게 할 수 있다.
  CSS를 통해 UX를 향상시킬 수 있으며 가시성, 직관성등이 향상된다.
3. VAR과 LET의 차이는 호이스팅 및 재사용에서 차이가 있다. VAR은 동일한 스코프(예를 들어 함수, 또는 자바스크립트 전역)에서 여러번 선언해도 되지만 , LET의 경우는 한번만 사용할 수 있다. 
4. JSP & SERVLET은 동적페이지를 만드는데 필요하다. 동적 페이지는 사용자의 정보 및 사용자의 권한 등에 따라 다른 페이지를 보여주게 할 수 있다.
5. Spring에서 추가 api및 프로젝트의 환경설정을 변경하는 파일은 pom.xml로 Maven 빌드 도구를 활용하여 api를 다운 받을 수 있다.
6. HTML에서 다른 페이지를 요청할 때는 <a href>를 통해 다른페이지로 이동할 수 있으며 button에도 event를 등록시켜 이동시킬 수 도 있다.
7. display 속성 중 inline과 block은 차지하는 공간에 차이가 있다.
 inline의 경우 다른 inline과 동일한 위치(같은 라인)에 존재할 수 있으며 block의 경우 새로운 라인에 생성되거나 존재해야 한다.
8.JavaScript에서의 Dom은 document object Model의 약자로 웹 문서의 구조화된 표현을 제공한다. DOM은 트리구조로 되어있으며 각 DOM 요소에 따라 이벤트리스너등을 등록하여 특정함수를 실행시키게 할 수 있다. 
9. Cookie와 Session의 차이는 저장장소에서 차이가 있다. 쿠키는 사용자의 웹 브라우저에 저장되나 세션은 서버축에 저장된다,
 쿠키의 경우데이터의 크기가 제한적이고 세션의 경우는 쿠키보다는 덜 엄격하다. 단 서버에 저장되다 보니 서버의 메모리를 차지하여 너무 많은 경우에는 서버에 부하가 올 수 있다.
10. Dispatcher Servlet이다. Spring FrameWork의 경우 dispatcher서블릿을 통해 사용자의 모든 요구를 받고 Handler Adapter나 Handler Mapping을 통해 Controller와 연결된다.
11. ol태그와 ul 태그는 순서의 여부에 따라 리스트를 나타내는 태그이다. 
 ol태그의 경우 ordered list의 약자로 순서가 있는 태그에서 사용한다. ul의 경우 unordered list의 약자로 순서가 없는 리스트에서 사용한다.
12. CSS 선택자 중 후행선택자와 근접후행선택자의 차이는 후행선택자의 경우 그 뒤에 온 모든 선택자를 선택하나 근접후행선택자는 바로 다음의 하나의 선택자만 선택한다는 것에서 차이가 있다. 
표기는 h2 ~ p(후행선택자), h2 + p(근접후행선택자) 이다.
13. JavaScript에서 함수를 정의할 때는 function()을 사용하여 함수를 정의한다.
14. 서버에서 페이지를 이동하는 방법은 크게 두개로 1.리다이렉트 방식 2. 포워드 방식이 있다.
 리다이렉트 방식은 클라이언트가 서버에게 요청을 보낸 후 서버는 해당 요청에 대한 응답으로 리다이렉트 정보를 보내준다.
 리다이렉트 방식은 새로운 url로 Object를 담은 상태로 새로운 url로 다시 요청을 보내는 형식이다.
 포워드 방식은 URL 주소창이 변경되지 않으며 다음으로 이동할 url로 요청정보를 그대로 전달한다.
15. Spring에서 요청을 받아 일을 수행하는 Controller를 POJO라고 한다.
16. HTML의 각 번호는
 1) 태그 2) 속성 3) 링크 4)텍스트 5)엘리먼트(요소)
17. HTML CSS 디자인을 적용할 수 있는 방법 가지를 3가지를  작성하시오 
 1) html의 각 태그안에 style적용
 2) html head 부분에 <style></style> 선언 후 내부에 각 태그별 css 스타일 추가하거나 외부 스타일시트 불러오기
 3) 부트스트랩등 템플릿 가져와 사용.

18.getElementByID 와 getElementByName의 차이는 id는 일반적으로 하나의 html 코드에 하나밖에 존재할 수 없으며 그 아이디에 해당하는 것을 가져온다. Name의 경우는 일반적으로 form 태그안에서 사용되며 Name이 같은 값에 사용된다. Name의 경우는 여러가지 요소가 겹쳐도 되기에(예를 들어, checkbox의 경우 동일한 name을 공유) 용도가 다르다.

19. JSP의 영역의 4가지는 PAGE, REQUEST, SESSION, APPLICATION으로 page는 하나의 페이지 request는 하나의 http의 요청을 처리할 때 사용되는 영역이다. session은 하나의 웹 브라우저와 관련된 영역이고 application은 하나의 web-application과 관련된 영역이다.
application영역에 저장된 객체는 브라우저를 바꾸어도 삭제되지 않는 특징을 가지고 있다.

20. Spring에서 Controller가 데이터를 저장할 때 쓰이는 내부영역은 model이다.

21. html의 모든 요소는 노드로 이루어져있다.

22. margin과 padding은 모두 간격을 의미하는데 margin의 경우 외부 간격 즉 다른 요소간 간격을 의미하고 padding은 내부 간격을 의미한다.

23. JavaScript에서 사용하는 객체표현 방식은 JavaScript Object Notation으로 즉 JSON이다.

24. GET방식과 POST방식의 차이는 GET방식의 경우 어떤 데이터를 가져와서 보여주거나 데이터를 요청하거나 보낼 때 사용한다.
POST 방식의 경우 데이터를 요청하거나 보낼 때 사용하지만 POST에 한번 감싸 보내므로 GET보다는 안정적이다. 단 GET방식의 경우 URL을 공유할 수 있다는 장점이 있다.

25. MyBatis Mapper Interface JDBC 에서 의 추상메소드를 구현하여 를 
자체 작성하여 실행하는 클래스 명을 작성하시오.
 MyBatis에서는 mapper.java 인터페이스를 활용하여 추상메서드를 구현하고 mapper.xml파일에 sql구문을 작성하여 JDBC를 실행할 수 있다.